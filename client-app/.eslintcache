[{"C:\\Users\\Sunny\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10"},{"size":523,"mtime":1611848913792,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":3419,"mtime":1612779631195,"results":"14","hashOfConfig":"12"},{"size":839,"mtime":1612588607044,"results":"15","hashOfConfig":"12"},{"size":2275,"mtime":1612780071197,"results":"16","hashOfConfig":"12"},{"size":2137,"mtime":1612780103162,"results":"17","hashOfConfig":"12"},{"size":1262,"mtime":1612601878877,"results":"18","hashOfConfig":"12"},{"size":2647,"mtime":1612780060880,"results":"19","hashOfConfig":"12"},{"size":1215,"mtime":1612756352532,"results":"20","hashOfConfig":"12"},{"size":351,"mtime":1612776495117,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gwl4mv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Sunny\\Reactivities\\client-app\\src\\index.tsx",[],["47","48"],"C:\\Users\\Sunny\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Sunny\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["49"],"import React, { useEffect, useState, Fragment, SyntheticEvent } from 'react';\nimport { Container } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { IActivity } from '../models/activity';\nimport { NavBar } from '../../features/nav/NavBar';\nimport { ActivityDashboard } from '../../features/activities/dashboard/ActivityDashboard';\nimport agent from '../api/agent';\nimport { LoadingComponent } from './LoadingComponent';\n\nconst App = () => {\n  const [activities, setActivities] = useState<IActivity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(null);\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [target, setTarget] = useState('');\n\n  const handleSelectActivity = (id: string) => {\n    setSelectedActivity(activities.filter(a => a.id === id)[0])\n    setEditMode(false);\n  }\n\n  const handleOpenCreateForm = () => {\n    setSelectedActivity(null);\n    setEditMode(true);\n  }\n\n  const handleCreateActivity = (activity: IActivity) => {\n    setSubmitting(true);\n    agent.Activities.create(activity).then(()=>{\n      setActivities([...activities, activity]);\n      setSelectedActivity(activity);\n      setEditMode(false);\n    }).then(()=>setSubmitting(false))\n  }\n\n  const handleEditActivity = (activity: IActivity) => {\n    setSubmitting(true);\n    agent.Activities.update(activity).then(()=>{\n      setActivities([...activities.filter(a => a.id !== activity.id), activity]);\n      setSelectedActivity(activity);\n      setEditMode(false);\n    }).then(()=>setSubmitting(false))\n  }\n\n  const handleDeleteActivity=(event: SyntheticEvent<HTMLButtonElement>,id:string)=>{\n    setSubmitting(true);\n    setTarget(event.currentTarget.name)\n    agent.Activities.delete(id).then(()=>{\n      setActivities([...activities.filter(a => a.id !== id)]);\n    }).then(()=>setSubmitting(false))\n  }\n\n  useEffect(() => {\n    agent.Activities.list()\n      .then((response) => {\n        let activities:IActivity[]=[];\n        response.forEach((activity)=>{\n          activity.date=activity.date.split('.')[0];\n          activities.push(activity);\n        })\n        setActivities(activities)\n      }).then(()=>setLoading(false));\n  }, []);\n\n  if(loading) return <LoadingComponent content='Loading activities...'/>\n  return (\n    <Fragment>\n      <NavBar openCreateForm={handleOpenCreateForm} />\n      <Container style={{ marginTop: '7em' }}>\n        <ActivityDashboard\n          activities={activities}\n          selectActivity={handleSelectActivity}\n          selectedActivity={selectedActivity}\n          editMode={editMode}\n          setEditMode={setEditMode}\n          setSelectedActivity={setSelectedActivity}\n          createActivity={handleCreateActivity}\n          editActivity={handleEditActivity}\n          deleteActivity={handleDeleteActivity}\n          submitting={submitting}\n          target={target}\n        />\n      </Container>\n    </Fragment>\n  );\n\n}\n\nexport default App;\n\n// interface IState\n// {\n//   activities : IActivity[]\n\n// }\n// class App extends Component<{},IState> {\n//   readonly state :IState = {\n//     activities:[]\n//   }\n\n//   componentDidMount(){\n//     axios.get<IActivity[]>('http://localhost:5000/api/activities')\n//       .then((response)=>{\n//         this.setState({\n//           activities:response.data\n//         })\n//       })\n//   }","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["50","51"],"import React, { SyntheticEvent } from 'react'\r\nimport { Grid, List } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity'\r\nimport { ActivityDetails } from '../details/ActivityDetails'\r\nimport { ActivityForm } from '../form/ActivityForm'\r\nimport { ActivityList } from './ActivityList'\r\n\r\ninterface IProps {\r\n    activities: IActivity[];\r\n    selectActivity: (id: string) => void;\r\n    selectedActivity: IActivity | null;\r\n    editMode: boolean;\r\n    setEditMode: (editMode: boolean) => void;\r\n    setSelectedActivity: (activity: IActivity | null) => void\r\n    createActivity: (activity: IActivity) => void;\r\n    editActivity: (activity: IActivity) => void;\r\n    deleteActivity: (e: SyntheticEvent<HTMLButtonElement>, id: string) => void;\r\n    submitting: boolean;\r\n    target:string;\r\n}\r\n\r\nexport const ActivityDashboard: React.FC<IProps> = ({\r\n    activities,\r\n    selectActivity,\r\n    selectedActivity,\r\n    editMode,\r\n    setEditMode,\r\n    setSelectedActivity,\r\n    createActivity,\r\n    editActivity,\r\n    deleteActivity,\r\n    submitting,\r\n    target }) => {\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <List>\r\n                    <ActivityList \r\n                    activities={activities} \r\n                    selectActivity={selectActivity} \r\n                    deleteActivity={deleteActivity}\r\n                    submitting={submitting}\r\n                    target={target}/>\r\n                </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                {selectedActivity && !editMode &&\r\n                    <ActivityDetails\r\n                        activity={selectedActivity}\r\n                        setEditMode={setEditMode}\r\n                        setSelectedActivity={setSelectedActivity} />}\r\n                {editMode &&\r\n                    <ActivityForm\r\n                        key={selectedActivity && selectedActivity.id || 0}\r\n                        setEditMode={setEditMode}\r\n                        activity={selectedActivity!}\r\n                        createActivity={createActivity}\r\n                        editActivity={editActivity} \r\n                        submitting={submitting}/>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],["52","53"],"C:\\Users\\Sunny\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\Users\\Sunny\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["54","55"],"import axios, { AxiosResponse } from 'axios';\r\nimport { promises } from 'dns';\r\nimport { IActivity } from '../models/activity';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => requests.get('/activities/'),\r\n    detail: (id: string) => requests.get(`/Activities/${id}`),\r\n    create: (activity: IActivity) => requests.post('/Activities/', activity),\r\n    update: (activity: IActivity) => requests.put(`/Activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del(`/Activities/${id}`)\r\n}\r\n\r\nexport default {\r\n    Activities\r\n}","C:\\Users\\Sunny\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":54,"column":47,"nodeType":"66","messageId":"67","endLine":54,"endColumn":49},{"ruleId":"64","severity":1,"message":"65","line":54,"column":70,"nodeType":"66","messageId":"67","endLine":54,"endColumn":72},{"ruleId":"56","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},{"ruleId":"60","severity":1,"message":"70","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":28,"column":1,"nodeType":"73","endLine":30,"endColumn":2},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["74"],["75"],"'promises' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]